{"version":3,"sources":["../../../../../lib/xlsx/xform/style/alignment-xform.js"],"names":["Enums","require","utils","BaseXform","validation","horizontalValues","reduce","p","v","horizontal","value","undefined","verticalValues","vertical","wrapText","shrinkToFit","textRotation","validInt","indent","Math","max","readingOrderValues","k","ReadingOrder","RightToLeft","LeftToRight","readingOrder","textRotationXform","toXml","tr","round","toModel","AlignmentXform","module","exports","inherits","tag","render","xmlStream","model","addRollback","openNode","isValid","add","name","addAttribute","closeNode","commit","rollback","parseOpen","node","valid","truthy","attributes","parseInt","parseText","parseClose"],"mappings":"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","file":"alignment-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2015 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar Enums = require('../../../doc/enums');\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar BaseXform = require('../base-xform');\r\n\r\nvar validation = {\r\n  horizontalValues: [\r\n    'left',\r\n    'center',\r\n    'right',\r\n    'fill',\r\n    'centerContinuous',\r\n    'distributed',\r\n    'justify'\r\n  ].reduce((p, v) => { p[v] = true; return p; }, {}),\r\n  horizontal: function(value) {\r\n    return this.horizontalValues[value] ? value : undefined;\r\n  },\r\n\r\n  verticalValues: [\r\n    'top',\r\n    'middle',\r\n    'bottom',\r\n    'distributed',\r\n    'justify'\r\n  ].reduce((p, v) => { p[v] = true; return p; }, {}),\r\n  vertical: function(value) {\r\n    if (value === 'middle') return 'center';\r\n    return this.verticalValues[value] ? value : undefined;\r\n  },\r\n  wrapText: function(value) {\r\n    return value ? true : undefined;\r\n  },\r\n  shrinkToFit: function(value) {\r\n    return value ? true : undefined;\r\n  },\r\n  textRotation: function(value) {\r\n    switch (value) {\r\n      case 'vertical':\r\n        return value;\r\n      default:\r\n        value = utils.validInt(value);\r\n        return (value >= -90) && (value <= 90) ? value : undefined;\r\n    }\r\n  },\r\n  indent: function(value) {\r\n    value = utils.validInt(value);\r\n    return Math.max(0, value);\r\n  },\r\n  readingOrderValues: [\r\n    {k: 'r2l', v: 1},\r\n    {k: 'l2r', v: 2},\r\n    {k: Enums.ReadingOrder.RightToLeft, v: 1},\r\n    {k: Enums.ReadingOrder.LeftToRight, v: 2}\r\n  ].reduce((p, v) => { p[v.k] = v.v; return p; }, {}),\r\n\r\n  readingOrder: function(value) {\r\n    return this.readingOrderValues[value];\r\n  }\r\n};\r\n\r\nvar textRotationXform = {\r\n  toXml: function(textRotation) {\r\n    textRotation = validation.textRotation(textRotation);\r\n    if (textRotation) {\r\n      if (textRotation === 'vertical') {\r\n        return 255;\r\n      }\r\n\r\n      var tr = Math.round(textRotation);\r\n      if ((tr >= 0) && (tr <= 90)) {\r\n        return tr;\r\n      }\r\n\r\n      if ((tr < 0) && (tr >= -90)) {\r\n        return 90 - tr;\r\n      }\r\n    }\r\n    return undefined;\r\n  },\r\n  toModel: function(textRotation) {\r\n    var tr = utils.validInt(textRotation);\r\n    if (tr !== undefined) {\r\n      if (tr === 255) {\r\n        return 'vertical';\r\n      }\r\n      if ((tr >= 0) && (tr <= 90)) {\r\n        return tr;\r\n      }\r\n      if ((tr > 90) && (tr <= 180)) {\r\n        return 90 - tr;\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n};\r\n\r\n// Alignment encapsulates translation from style.alignment model to/from xlsx\r\nvar AlignmentXform = module.exports = function() {\r\n};\r\n\r\nutils.inherits(AlignmentXform, BaseXform, {\r\n\r\n  get tag() { return 'alignment'; },\r\n\r\n  render: function(xmlStream, model) {\r\n    xmlStream.addRollback();\r\n    xmlStream.openNode('alignment');\r\n\r\n    var isValid = false;\r\n    function add(name, value) {\r\n      if (value) {\r\n        xmlStream.addAttribute(name, value);\r\n        isValid = true;\r\n      }\r\n    }\r\n    add('horizontal', validation.horizontal(model.horizontal));\r\n    add('vertical', validation.vertical(model.vertical));\r\n    add('wrapText', validation.wrapText(model.wrapText) ? '1' : false);\r\n    add('shrinkToFit', validation.shrinkToFit(model.shrinkToFit) ? '1' : false);\r\n    add('indent', validation.indent(model.indent));\r\n    add('textRotation', textRotationXform.toXml(model.textRotation));\r\n    add('readingOrder', validation.readingOrder(model.readingOrder));\r\n\r\n    xmlStream.closeNode();\r\n\r\n    if (isValid) {\r\n      xmlStream.commit();\r\n    } else {\r\n      xmlStream.rollback();\r\n    }\r\n  },\r\n  \r\n  parseOpen: function(node) {\r\n    var model = {};\r\n    \r\n    var valid = false;\r\n    function add(truthy, name, value) {\r\n      if (truthy) {\r\n        model[name] = value;\r\n        valid = true;\r\n      }\r\n    }\r\n    add(node.attributes.horizontal, 'horizontal', node.attributes.horizontal);\r\n    add(node.attributes.vertical, 'vertical', node.attributes.vertical === 'center' ? 'middle' : node.attributes.vertical);\r\n    add(node.attributes.wrapText, 'wrapText', !!node.attributes.wrapText);\r\n    add(node.attributes.shrinkToFit, 'shrinkToFit', !!node.attributes.shrinkToFit);\r\n    add(node.attributes.indent, 'indent', parseInt(node.attributes.indent, 10));\r\n    add(node.attributes.textRotation, 'textRotation', textRotationXform.toModel(node.attributes.textRotation));\r\n    add(node.attributes.readingOrder, 'readingOrder', node.attributes.readingOrder);\r\n    \r\n    this.model = valid ? model : null;\r\n  },\r\n  \r\n  parseText: function() {\r\n  },\r\n  parseClose: function() {\r\n    return false;\r\n  }\r\n});\r\n"]}